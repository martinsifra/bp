
{block content}
<h1 class="page-header">Statistika <small>{$athlete->firstname} {$athlete->surname}</small></h1>

<div class="btn-toolbar" role="toolbar">
    <a n:href="Athlete:detail $athlete->id" type="button" class="btn btn-default" title="ZpÄ›t"><i class="fa fa-level-up fa-rotate-270"></i></a>
</div>

<div class="row">
    <div class="col-xs-12">
        <h2>{$test->name}</h2>
    </div>
</div>
<div class="row">
    <div class="col-md-8">
        {*control testGrid*}
        <script src="{$basePath}/js/chart.min.js"></script>
        <canvas id="myChart" width="800" height="400"></canvas>
        <script n:syntax="double">
            var ctx = document.getElementById("myChart").getContext("2d");

            var data = {
                labels : [{{foreach $labels as $item}} {{$item['name']}}+' '+{{$item['created']|date:'j.n.Y'}} {{sep}}, {{/sep}} {{/foreach}}],
                datasets : [
                    {
                        fillColor : "rgba(151,187,205,0.5)",
                        strokeColor : "rgba(151,187,205,1)",
                        pointColor : "rgba(151,187,205,1)",
                        pointStrokeColor : "#fff",
                        data : [{{foreach $data as $item}} {{$item}} {{sep}}, {{/sep}} {{/foreach}}]
                    }
                ]
            }
            
            var options = {

                //Boolean - If we show the scale above the chart data			
                scaleOverlay : true,

                //Boolean - If we want to override with a hard coded scale
                scaleOverride : false,

                //** Required if scaleOverride is true **
                //Number - The number of steps in a hard coded scale
                scaleSteps : 20,
                //Number - The value jump in the hard coded scale
                scaleStepWidth : 0.5,
                //Number - The scale starting value
                scaleStartValue : 45,

                //String - Colour of the scale line	
                scaleLineColor : "rgba(0,0,0,.1)",

                //Number - Pixel width of the scale line	
                scaleLineWidth : 1,

                //Boolean - Whether to show labels on the scale	
                scaleShowLabels : true,

                //Interpolated JS string - can access value
                scaleLabel : "<%=value%>",

                //String - Scale label font declaration for the scale label
                scaleFontFamily : "'Arial'",

                //Number - Scale label font size in pixels	
                scaleFontSize : 12,

                //String - Scale label font weight style	
                scaleFontStyle : "normal",

                //String - Scale label font colour	
                scaleFontColor : "#666",	

                ///Boolean - Whether grid lines are shown across the chart
                scaleShowGridLines : true,

                //String - Colour of the grid lines
                scaleGridLineColor : "rgba(0,0,0,.05)",

                //Number - Width of the grid lines
                scaleGridLineWidth : 1,	

                //Boolean - Whether the line is curved between points
                bezierCurve : false,

                //Boolean - Whether to show a dot for each point
                pointDot : true,

                //Number - Radius of each point dot in pixels
                pointDotRadius : 3,

                //Number - Pixel width of point dot stroke
                pointDotStrokeWidth : 1,

                //Boolean - Whether to show a stroke for datasets
                datasetStroke : true,

                //Number - Pixel width of dataset stroke
                datasetStrokeWidth : 2,

                //Boolean - Whether to fill the dataset with a colour
                datasetFill : true,

                //Boolean - Whether to animate the chart
                animation : true,

                //Number - Number of animation steps
                animationSteps : 60,

                //String - Animation easing effect
                animationEasing : "easeOutQuart",

                //Function - Fires when the animation is complete
                onAnimationComplete : null

            }
            
            new Chart(ctx).Line(data, options);
        </script>
    </div>
    <div class="col-md-4">
        {control testGrid}
    </div>
</div>